basePath: /
definitions:
  auth.SignedUser:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      token:
        type: string
      updatedAt:
        type: string
    type: object
  auth.Signing:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: "123456"
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  auth.Signup:
    properties:
      email:
        example: test@test.com
        type: string
      name:
        example: Test
        type: string
      password:
        example: "123456"
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  organization.CreateDTO:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  organization.DTO:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  organization.UpdateDTO:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  tracker.CreateDTO:
    properties:
      name:
        type: string
      organizationId:
        type: string
    type: object
  tracker.DTO:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/organization.DTO'
      organizationId:
        type: string
      updatedAt:
        type: string
    type: object
  tracker.UpdateDTO:
    properties:
      name:
        type: string
      organizationId:
        type: string
    type: object
  tracker_locations.CreateDTO:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      trackerId:
        type: string
    type: object
  tracker_locations.DTO:
    properties:
      createdAt:
        type: string
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      tracker:
        $ref: '#/definitions/tracker.DTO'
      trackerId:
        type: string
      updatedAt:
        type: string
    type: object
  tracker_locations.UpdateDTO:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      trackerId:
        type: string
    type: object
  user.CreateDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  user.DTO:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  user.UpdateDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  user_organizations.CreateDTO:
    properties:
      organizationId:
        type: string
      userId:
        type: string
    type: object
  user_organizations.DTO:
    properties:
      createdAt:
        type: string
      id:
        type: string
      organization:
        $ref: '#/definitions/organization.DTO'
      organizationId:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/user.DTO'
      userId:
        type: string
    type: object
externalDocs:
  description: OpenAPI
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Open source track server
  license:
    name: GNU 3.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Open Tracker GO Server
  version: "0.1"
paths:
  /auth/signing:
    post:
      consumes:
      - application/json
      description: Signing a user by giver form
      parameters:
      - description: Signing User
        in: body
        name: signing
        required: true
        schema:
          $ref: '#/definitions/auth.Signing'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignedUser'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Signing
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Signup a user by giver form
      parameters:
      - description: Add User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.Signup'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.DTO'
        "500":
          description: Internal Server Error
      summary: Signup User
      tags:
      - auth
  /organizations:
    get:
      consumes:
      - application/json
      description: Filter Organizations by query paramenters
      parameters:
      - description: Organization name
        in: query
        name: name
        type: string
      - description: Organization email
        in: query
        name: email
        type: string
      - description: Organization createdAt start date
        in: query
        name: start
        type: string
      - description: Organization createdAt end date
        in: query
        name: end
        type: string
      - description: Organization populate properties
        in: query
        name: populate
        type: string
      - description: Organization pagination limit
        in: query
        name: limit
        type: integer
      - description: Organization pagination limit
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/organization.DTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Filter Organizations
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Save an organization by giver form
      parameters:
      - description: Add Organization
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/organization.DTO'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Save Organization
      tags:
      - organizations
  /organizations/{id}:
    get:
      consumes:
      - application/json
      description: Find one Organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/organization.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Find one an Organization
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Update one Organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Organization
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/organization.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/organization.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update one an Organization
      tags:
      - organizations
  /tracker_locations:
    get:
      consumes:
      - application/json
      description: Filter TrackerLocations by query paramenters
      parameters:
      - description: TrackerLocation createdAt start date
        in: query
        name: start
        required: true
        type: string
      - description: TrackerLocation createdAt end date
        in: query
        name: end
        required: true
        type: string
      - description: TrackerLocation trackerId
        in: query
        name: trackerId
        required: true
        type: number
      - description: TrackerLocation pagination limit
        in: query
        name: limit
        type: integer
      - description: TrackerLocation pagination limit
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tracker_locations.DTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Filter TrackerLocations
      tags:
      - trackerLocations
    post:
      consumes:
      - application/json
      description: Save a trackerLocation by giver form
      parameters:
      - description: Add TrackerLocation
        in: body
        name: trackerLocation
        required: true
        schema:
          $ref: '#/definitions/tracker_locations.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tracker_locations.DTO'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Save TrackerLocation
      tags:
      - trackerLocations
  /tracker_locations/{id}:
    get:
      consumes:
      - application/json
      description: Find one TrackerLocation by ID
      parameters:
      - description: TrackerLocation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker_locations.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Find one an TrackerLocation
      tags:
      - trackerLocations
    post:
      consumes:
      - application/json
      description: Update one TrackerLocation by ID
      parameters:
      - description: TrackerLocation ID
        in: path
        name: id
        required: true
        type: string
      - description: Update TrackerLocation
        in: body
        name: trackerLocation
        required: true
        schema:
          $ref: '#/definitions/tracker_locations.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker_locations.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update one an TrackerLocation
      tags:
      - trackerLocations
  /trackers:
    get:
      consumes:
      - application/json
      description: Filter Trackers by query paramenters
      parameters:
      - description: Tracker createdAt start date
        in: query
        name: start
        type: string
      - description: Tracker createdAt end date
        in: query
        name: end
        type: string
      - description: Tracker populate properties
        in: query
        name: populate
        type: string
      - description: Tracker pagination limit
        in: query
        name: limit
        type: integer
      - description: Tracker pagination limit
        in: query
        name: offset
        type: integer
      - description: Tracker name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tracker.DTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Filter Trackers
      tags:
      - trackers
    post:
      consumes:
      - application/json
      description: Save a tracker by giver form
      parameters:
      - description: Add Tracker
        in: body
        name: tracker
        required: true
        schema:
          $ref: '#/definitions/tracker.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tracker.DTO'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Save Tracker
      tags:
      - trackers
  /trackers/{id}:
    get:
      consumes:
      - application/json
      description: Find one Tracker by ID
      parameters:
      - description: Tracker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Find one an Tracker
      tags:
      - trackers
    post:
      consumes:
      - application/json
      description: Update one Tracker by ID
      parameters:
      - description: Tracker ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Tracker
        in: body
        name: tracker
        required: true
        schema:
          $ref: '#/definitions/tracker.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update one an Tracker
      tags:
      - trackers
  /userOrganizations:
    get:
      consumes:
      - application/json
      description: Filter UserOrganizations by query paramenters
      parameters:
      - description: User createdAt start date
        in: query
        name: start
        type: string
      - description: User createdAt end date
        in: query
        name: end
        type: string
      - description: User populate properties
        in: query
        name: populate
        type: string
      - description: User pagination limit
        in: query
        name: limit
        type: integer
      - description: User pagination limit
        in: query
        name: offset
        type: integer
      - description: UserOrganization userId
        in: query
        name: userId
        type: string
      - description: UserOrganization organizationId
        in: query
        name: organizationId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_organizations.DTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Filter UserOrganizations
      tags:
      - userOrganizations
    post:
      consumes:
      - application/json
      description: Save a UserOrganization by giver form
      parameters:
      - description: Add User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user_organizations.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_organizations.DTO'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Save UserOrganization
      tags:
      - userOrganizations
  /userOrganizations/{id}:
    get:
      consumes:
      - application/json
      description: Delete one UserOrganization by ID
      parameters:
      - description: UserOrganizatio ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_organizations.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete one an UserOrganization
      tags:
      - userOrganizations
  /users:
    get:
      consumes:
      - application/json
      description: Filter Users by query paramenters
      parameters:
      - description: User createdAt start date
        in: query
        name: start
        type: string
      - description: User createdAt end date
        in: query
        name: end
        type: string
      - description: User populate properties
        in: query
        name: populate
        type: string
      - description: User pagination limit
        in: query
        name: limit
        type: integer
      - description: User pagination limit
        in: query
        name: offset
        type: integer
      - description: User name
        in: query
        name: name
        type: string
      - description: User email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.DTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Filter Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Save a user by giver form
      parameters:
      - description: Add User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.DTO'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Save User
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Find one User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Find one an User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Update one User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update one an User
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Returns the user by the provided token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DTO'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get the user by the provided token
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
